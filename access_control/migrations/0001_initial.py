# Generated by Django 5.1.13 on 2025-10-30 12:09

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("institutions", "0001_initial"),
        ("people", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="ExternalAccessLogEntry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("external_id", models.BigIntegerField(unique=True)),
                ("tipo", models.CharField(blank=True, max_length=4)),
                ("origen", models.CharField(blank=True, max_length=8)),
                ("id_tarjeta", models.CharField(blank=True, max_length=64)),
                ("id_cliente", models.BigIntegerField(blank=True, null=True)),
                ("fecha", models.DateTimeField()),
                ("resultado", models.CharField(blank=True, max_length=4)),
                ("id_controlador", models.BigIntegerField(blank=True, null=True)),
                ("id_acceso", models.BigIntegerField(blank=True, null=True)),
                ("observacion", models.CharField(blank=True, max_length=255)),
                ("tipo_registro", models.CharField(blank=True, max_length=32)),
                ("id_cd_motivo", models.BigIntegerField(blank=True, null=True)),
                ("flag_permite_paso", models.CharField(blank=True, max_length=4)),
                ("fecha_paso_permitido", models.DateTimeField(blank=True, null=True)),
                (
                    "id_controlador_paso_permitido",
                    models.BigIntegerField(blank=True, null=True),
                ),
                ("synced_at", models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                "verbose_name": "Movimiento externo sincronizado",
                "verbose_name_plural": "Movimientos externos sincronizados",
                "ordering": ("-fecha", "-external_id"),
                "indexes": [
                    models.Index(
                        fields=["-fecha"], name="access_cont_fecha_16d27b_idx"
                    ),
                    models.Index(
                        fields=["external_id"], name="access_cont_externa_5d640a_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="WhitelistEntry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_allowed", models.BooleanField(default=True)),
                ("valid_from", models.DateField(blank=True, null=True)),
                ("valid_until", models.DateField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "access_point",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="whitelist_entries",
                        to="institutions.accesspoint",
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        blank=True,
                        help_text="Evento asociado si la autorización es específica para un evento.",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="whitelist_entries",
                        to="institutions.event",
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="whitelist_entries",
                        to="people.person",
                    ),
                ),
            ],
            options={
                "verbose_name": "Entrada en lista blanca",
                "verbose_name_plural": "Lista blanca",
                "unique_together": {("person", "access_point", "event")},
            },
        ),
    ]
